{"event": "eval", "ocaml": [{"type": "scope", "out": "Characters 36-45:\n  let newStr = sepConcat \"; \" (List.map f l) in\n               ^^^^^^^^^\nError: Unbound value sepConcat\n", "min": "\nlet stringOfList f l =\n  let newStr = sepConcat \"; \" (List.map f l) in \"[\" ^ (newStr ^ \"]\");;\n", "in": "let stringOfList f l =\nlet newStr = sepConcat \"; \" (List.map f l) in\n\"[\" ^ newStr ^ \"]\""}, {"type": "", "out": "", "min": "", "in": "let rec clone x n = \nif n <= 0 then [] \nelse x::clone x (n-1)"}]}
