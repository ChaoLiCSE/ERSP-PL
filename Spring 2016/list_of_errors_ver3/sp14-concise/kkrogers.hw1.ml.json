{"event": "eval", "ocaml": [{"in": "let rec sumList xs = \nmatch xs with\n[] -> 0\n| front::back -> front+(sumList back)", "out": "", "min": "\nlet rec sumList xs =\n  match xs with | [] -> 0 | front::back -> front + (sumList back);;\n", "type": ""}]}
{"event": "eval", "ocaml": [{"in": "let rec sumList xs = \nmatch xs with\n[] -> 0\n| front::back -> front+(sumList back)", "out": "", "min": "\nlet rec sumList xs =\n  match xs with | [] -> 0 | front::back -> front + (sumList back);;\n", "type": ""}]}
{"event": "eval", "ocaml": [{"in": "let rec sumList xs = \nmatch xs with\n[] -> 0\n| front::back -> front+(sumList back)", "out": "", "min": "\nlet rec sumList xs =\n  match xs with | [] -> 0 | front::back -> front + (sumList back);;\n", "type": ""}]}
{"event": "eval", "ocaml": [{"in": "let rec sumList xs = \nmatch xs with\n[] -> 0\n| front::back -> front+(sumList back)", "out": "", "min": "\nlet rec sumList xs =\n  match xs with | [] -> 0 | front::back -> front + (sumList back);;\n", "type": ""}]}
