{"event": "eval", "ocaml": [{"type": "", "in": "let rec sumList xs = \nmatch xs with \n| [] -> 0\n| x :: tail -> x + sumList tail", "min": "\nlet rec sumList xs = match xs with | [] -> 0 | x::tail -> x + (sumList tail);;\n", "out": ""}]}
{"event": "eval", "ocaml": [{"type": "", "in": "let rec sumList xs = \nmatch xs with \n| [] -> 0\n| x :: tail -> x + sumList tail", "min": "\nlet rec sumList xs = match xs with | [] -> 0 | x::tail -> x + (sumList tail);;\n", "out": ""}]}
{"event": "eval", "ocaml": [{"type": "", "in": "let rec sumList xs = \nmatch xs with \n| [] -> 0\n| x :: tail -> x + sumList tail", "min": "\nlet rec sumList xs = match xs with | [] -> 0 | x::tail -> x + (sumList tail);;\n", "out": ""}]}
{"event": "eval", "ocaml": [{"type": "", "in": "let rec sumList xs = \nmatch xs with \n| [] -> 0\n| x :: tail -> x + sumList tail", "min": "\nlet rec sumList xs = match xs with | [] -> 0 | x::tail -> x + (sumList tail);;\n", "out": ""}]}
{"event": "eval", "ocaml": [{"type": "", "in": "let rec sumList xs = \nmatch xs with \n| [] -> 0\n| x :: tail -> x + sumList tail", "min": "\nlet rec sumList xs = match xs with | [] -> 0 | x::tail -> x + (sumList tail);;\n", "out": ""}]}
