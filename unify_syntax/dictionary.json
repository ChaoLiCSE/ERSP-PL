{"span-fraction": [0.024390243902439025, 0.04, 0.5714285714285714], "in": "\nlet explode s =\n  let rec go i =\n    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in\n  go 0;;\n\nlet rec listReverse l =\n  match l with | [] -> [] | h::t -> (listReverse t) @ [h];;\n\nlet palindrome w = (listReverse (explode w)) == w;;\n", "fixed": ["let explode s = let rec go i = if i > (failwith \"\") ( String . length s ) then [] else ( s . [ i ] ) :: ( go ( i + 1 ) ) in go 0;;", "let rec listReverse l = match (failwith \"\") with | [] -> [] | h :: t -> ( listReverse t ) @ [ h ];;", "let palindrome w = (failwith \"\") = w;;"], "span-size": [0, 0, 7]}
