file no.: 0
original code: 

let rec mulByDigit i l =
  let rec mulHelper l' =
    match l' with
    | [] -> (0, [])
    | h::t ->
        let (carry,rest) = mulHelper t in
        let prod = (i * h) + carry in ((prod / 10), ((prod mod 10) :: rest)) in
  let (_,ans) = mulHelper List.rev (0 :: l) in ans;;
 
fixed code: 
['let rec mulByDigit i l = let rec mulHelper l\' = match l\' with | [] -> ( 0 , [] ) | h :: t -> let ( carry , rest ) = mulHelper t in let prod = ( i * h ) + carry in ( ( prod / 10 ) , ( ( prod mod 10 ) :: rest ) ) in let ( _ , ans ) = (failwith "") List . rev ( 0 :: l ) in ans;;'] 
span size: 
[0] 
span fraction: 
[0.011904761904761904] 

